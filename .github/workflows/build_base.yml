name: Build Base No-OVOS Headless Image

on:
  workflow_dispatch:
  push:
    paths:
      - 'build_base.sh'

jobs:
  modify-rpi-image:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Add OVOS to Raspberry Pi OS Bookworm
      - name: Add OVOS to Raspberry Pi OS Bookworm
        uses: TigreGotico/rpi-image-modifier@main
        id: create-image
        env:
          USER: 'ovos'
          PASSWORD: 'ovos'
          HOSTNAME: "raspOVOS"
        with:
          base-image-url: https://downloads.raspberrypi.com/raspios_lite_arm64/images/raspios_lite_arm64-2024-11-19/2024-11-19-raspios-bookworm-arm64-lite.img.xz
          image-path: raspOVOS-NO-OVOS-bookworm-arm64-lite.img
          compress-with-xz: true
          cache: true
          shrink: true
          mount-repository: true
          env-vars: USER,PASSWORD,HOSTNAME
          script-path: build_base.sh

      # Step 3: Get current date to use in release name
      - name: Get Current Date
        id: current-date
        run: echo "current_date=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Step 4: Print the image creation outputs
      - name: Print outputs
        shell: bash
        run: |
          echo 'image-path: ${{ steps.create-image.outputs.image-path }}'
          echo 'image-size: ${{ steps.create-image.outputs.image-size }}'
          echo 'image-sha256sum: ${{ steps.create-image.outputs.image-sha256sum }}'

      # Step 5: Check if release already exists
      - name: Check if release exists
        id: release-check
        run: |
          RELEASE_NAME="raspOVOS-NO-OVOS-bookworm-arm64-lite-${{ env.current_date }}"
          RELEASE=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/$RELEASE_NAME")
          echo "::set-output name=release_exists::$(echo $RELEASE | grep -c 'not found')"

      # Step 6: Create Release if it doesn't exist
      - name: Create Release
        id: create_release
        if: steps.release-check.outputs.release_exists == '1'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: raspOVOS-NO-OVOS-bookworm-arm64-lite-${{ env.current_date }}
          release_name: raspOVOS-NO-OVOS-bookworm-arm64-lite-${{ env.current_date }}
          body: |
            Testing base OS setup only.
          draft: false
          prerelease: false

      # Step 7: Upload to Releases
      - name: Upload to releases
        uses: xresloader/upload-to-github-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          file: ${{ steps.create-image.outputs.image-path }}
          release_id: ${{ steps.create_release.outputs.id }}
          draft: false
          overwrite: true
          prerelease: false
          verbose: true
